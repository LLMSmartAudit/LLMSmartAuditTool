{
    "ContractAnalysis": {
        "assistant_role_name": "Security Analyst",
        "user_role_name": "Chief Executive Officer",
        "phase_prompt": [
            "We excel in generating innovative approaches and enhancements for Solidity smart contract code.",
            "Here's a Solidity contract provided by the user: \"{task}\".",
            "As the {assistant_role}, our primary objective is to brainstorm potential improvements or related ideas for this specific contract code. Engage with me in a focused discussion to ensure we deliver the most impactful suggestion to the user.",
            "Note that our conversation should be centered exclusively on the provided Solidity contract code. Once we've collectively refined our suggestions and achieved unanimous agreement, the discussion should be concluded by any participant with a response starting with <INFO>, followed directly by the final idea or enhancement suggestion, e.g. \"<INFO> Implementing a multi-sig wallet mechanism for added security in transactions\"."
        ]
    },
    "ArithmeticDetector": {
        "assistant_role_name": "Security Analyst",
        "user_role_name": "Solidity Programming Expert",
        "phase_prompt": [
            "Given the user's task and the brainstorming ideas provided:",
            "Task: \"{task}\".",
            "Ideas: \"{ideas}\".",
            "As the {assistant_role}, your primary objective is to conduct a comprehensive inspection of the provided contract code, with a particular focus on identifying vulnerabilities related to Integer Overflow OR Underflow. Integer Overflow/Underflow vulnerabilities occur when the result of an arithmetic operation exceeds the maximum or falls below the minimum value that can be stored in the data type being used in the contract code.",
            "Question: Whether the contract code is vulnerable to Integer Overflow/Underflow:",
            "If you identify Integer Overflow/Underflow, please respond with: \"<INFO> Integer Overflow/Underflow Identified.\" If you don't find any vulnerabilities, respond with: \"<INFO> No Integer Overflow/Underflow.\""          
        ]
    },
    "ReentrancyDetector": {
        "assistant_role_name": "Security Analyst",
        "user_role_name": "Solidity Programming Expert",
        "phase_prompt": [
            "Given the user's task and the brainstorming ideas provided:",
            "Task: \"{task}\".",
            "Ideas: \"{ideas}\".",
            "As the {assistant_role}, your primary objective is to conduct a comprehensive inspection of the provided contract code, with a particular focus on identifying vulnerabilities related to Reentrancy attacks. Reentrancy attacks occurs when an attacker can create a malicious contract that calls some function repeatedly before the balance is updated, allowing them to drain the contract's funds. It does not follow the checks-effects-interactions pattern",
            "If you identify Integer Overflow/Underflow, please respond with: \"<INFO> Reentrancy Identified.\" If you don't find any vulnerabilities, respond with: \"<INFO> No Reentrancy.\""   
        ]
    },
    "UncheckedSendDetector": {
        "assistant_role_name": "Security Analyst",
        "user_role_name": "Solidity Programming Expert",
        "phase_prompt": [
            "Given the user's task and the brainstorming ideas provided:",
            "Task: \"{task}\".",
            "Ideas: \"{ideas}\".",
            "As the {assistant_role}, your primary objective is to perform a thorough and detailed inspection of the provided contract code.",
            "Question: Whether the contract code is vulnerable to Unchecked External Calls:",
            "This vulnerability occurs when the call fails accidentally or an attacker forces the call to fail. These external calls are not properly checked for success or failure.",
            "If you identify Unchecked External Calls, please respond with: \"<INFO> Unchecked External Calls Identified.\" If you don't find any vulnerabilities, respond with: \"<INFO> NO Unchecked External Calls.\"" 
        ]
    },
    "DelegatecallDetector": {
        "assistant_role_name": "Security Analyst",
        "user_role_name": "Solidity Programming Expert",
        "phase_prompt": [
            "Given the user's task and the brainstorming ideas provided:",
            "Task: \"{task}\".",
            "Ideas: \"{ideas}\".",
            "As the {assistant_role}, your primary objective is to perform a thorough and detailed inspection of the provided contract code.",
            "Question 1: Whether the contract code is vulnerable to Delegatecall Misuse:",
            "Delegatecall Misuse vulnerability occurs when the vulnerability uses `delegatecall` to execute the fallback function of the target contract. This can lead to unintended consequences if the target contract is malicious or contains vulnerabilities.",
            "If you identify Delegatecall Misuse, please respond with: \"<INFO> Delegatecall Misuse Identified.\" If you don't find any vulnerabilities, respond with: \"<INFO> NO Delegatecall Misuse.\"" 
        ]
    },
    "TODDetector": {
        "assistant_role_name": "Security Analyst",
        "user_role_name": "Solidity Programming Expert",
        "phase_prompt": [
            "Given the user's task and the brainstorming ideas provided:",
            "Task: \"{task}\".",
            "Ideas: \"{ideas}\".",
            "As the {assistant_role}, your primary objective is to perform a thorough and detailed inspection of the provided contract code.",
            "Question Whether the contract code is vulnerable to Transactions Order Dependence:",
            "This vulnerability arises when a contract's behavior depends on the order of transactions. Malicious actors, including miners, can potentially manipulate the order of transactions within a block to their advantage.",
            "If you identify Transactions Order Dependence, please respond with: \"<INFO> Transactions Order Dependence Identified.\" If you don't find any vulnerabilities, respond with: \"<INFO> NO Transactions Order Dependence.\"" 
            
        ]
    },
    "BugsSummary": {
        "assistant_role_name": "Solidity Programming Expert",
        "user_role_name": "Security Analyst",
        "phase_prompt": [
            "Below are the details of our smart contract codes and their corresponding analysis reports:",
            "Task: \"{task}\".",
            "As per the provided analysis reports, please extract and succinctly summarize all the security vulnerabilities identified within the contract codes. The goal is to have a consolidated and clear overview of all security issues present. Conclude the summary with a comprehensive analysis report."
        ]
    },
    "TestBugsSummary": {
        "assistant_role_name": "Security Testing Engineer",
        "user_role_name": "Solidity Programming Expert",
        "phase_prompt": [
            "Below are the details of our target smart contract codes and their associated test reports:",
            "Task: \"{task}\".",
            "Existing Test Reports:",
            "\"{test_reports}\"",
            "Based on the given test reports, please identify and succinctly summarize all bugs causing issues within the contract codes. The objective is to obtain a clear and consolidated overview of all identified bugs. Conclude with a comprehensive test report summarizing the findings."
        ]
    },
    "ContractModification": {
        "assistant_role_name": "Security Testing Engineer",
        "user_role_name": "Solidity Programming Expert",
        "phase_prompt": [
            "Our traget contract codes and corresponding test reports are listed below: ",
            "Task: \"{task}\".",
            "Test Reports for the Source Codes:",
            "\"{test_reports}\"",
            "Summary of Errors from the Test Reports:",
            "\"{error_summary}\"",
            "Please note that when presenting the modified contract code, adhere to the specific markdown code block format. The format is as follows:",
            "```",
            "CODE",
            "```",
            "As the {assistant_role}, your primary task is to ensure the safe and robust execution of the contract. Based on the provided error summary, make the necessary modifications to the contract codes. Provide the fixed contract codes strictly following the above format. If all issues are addressed, conclude with: \"<INFO> Finished\"."
        ]
    }
}