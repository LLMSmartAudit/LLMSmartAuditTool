Task:
pragma solidity 0.8.1;contract CompositeMultiOracle is IOracle, AccessControl {using CastBytes32Bytes6 for bytes32;uint8 public constant override decimals = 18;event SourceSet(bytes6 indexed baseId, bytes6 indexed quoteId, address indexed source);event PathSet(bytes6 indexed baseId, bytes6 indexed quoteId, bytes6[] indexed path);struct Source {address source;uint8 decimals;}mapping(bytes6 => mapping(bytes6 => Source)) public sources;mapping(bytes6 => mapping(bytes6 => bytes6[])) public paths;function setSource(bytes6 base, bytes6 quote, address source) external auth {_setSource(base, quote, source);}function setSources(bytes6[] memory bases, bytes6[] memory quotes, address[] memory sources_) external auth {require(bases.length == quotes.length &&bases.length == sources_.length,"Mismatched inputs");for (uint256 i = 0; i < bases.length; i++) {_setSource(bases[i], quotes[i], sources_[i]);}}function setPath(bytes6 base, bytes6 quote, bytes6[] memory path) external auth {_setPath(base, quote, path);}function setPaths(bytes6[] memory bases, bytes6[] memory quotes, bytes6[][] memory paths_) external auth {require(bases.length == quotes.length &&bases.length == paths_.length,"Mismatched inputs");for (uint256 i = 0; i < bases.length; i++) {_setPath(bases[i], quotes[i], paths_[i]);}}function peek(bytes32 base, bytes32 quote, uint256 amount)external view virtual overridereturns (uint256 value, uint256 updateTime){uint256 price = 1e18;bytes6 base_ = base.b6();bytes6 quote_ = quote.b6();bytes6[] memory path = paths[base_][quote_];for (uint256 p = 0; p < path.length; p++) {(price, updateTime) = _peek(base_, path[p], price, updateTime);base_ = path[p];}(price, updateTime) = _peek(base_, quote_, price, updateTime);value = price * amount / 1e18;}function get(bytes32 base, bytes32 quote, uint256 amount)external virtual overridereturns (uint256 value, uint256 updateTime){uint256 price = 1e18;bytes6 base_ = base.b6();bytes6 quote_ = quote.b6();bytes6[] memory path = paths[base_][quote_];for (uint256 p = 0; p < path.length; p++) {(price, updateTime) = _get(base_, path[p], price, updateTime);base_ = path[p];}(price, updateTime) = _get(base_, quote_, price, updateTime);value = price * amount / 1e18;}function _peek(bytes6 base, bytes6 quote, uint256 priceIn, uint256 updateTimeIn)private view returns (uint priceOut, uint updateTimeOut){Source memory source = sources[base][quote];require (source.source != address(0), "Source not found");(priceOut, updateTimeOut) = IOracle(source.source).peek(base, quote, 10 ** source.decimals);priceOut = priceIn * priceOut / (10 ** source.decimals);updateTimeOut = (updateTimeOut < updateTimeIn) ? updateTimeOut : updateTimeIn;}function _get(bytes6 base, bytes6 quote, uint256 priceIn, uint256 updateTimeIn)private returns (uint priceOut, uint updateTimeOut){Source memory source = sources[base][quote];require (source.source != address(0), "Source not found");(priceOut, updateTimeOut) = IOracle(source.source).get(base, quote, 10 ** source.decimals);priceOut = priceIn * priceOut / (10 ** source.decimals);updateTimeOut = (updateTimeOut < updateTimeIn) ? updateTimeOut : updateTimeIn;}function _setSource(bytes6 base, bytes6 quote, address source) internal {uint8 decimals_ = IOracle(source).decimals();require (decimals_ <= 18, "Unsupported decimals");sources[base][quote] = Source({source: source,decimals: decimals_});emit SourceSet(base, quote, source);}function _setPath(bytes6 base, bytes6 quote, bytes6[] memory path) internal {bytes6 base_ = base;for (uint256 p = 0; p < path.length; p++) {require (sources[base_][path[p]].source != address(0), "Source not found");base_ = path[p];}paths[base][quote] = path;emit PathSet(base, quote, path);}}

Config:
ChatEnvConfig.clear_structure: True
ChatEnvConfig.git_management: False
ChatEnvConfig.gui_design: True


Roster:
Chief Executive Officer, Counselor, Security Analyst, Solidity Programming Expert, Security Testing Engineer

Modality:


Ideas:
  Implementing these enhancements will improve the security, reliability, and usability of the CompositeMultiOracle contract, ensuring it aligns with best practices and industry standards.

Language:


Code_Version:
0.0

Proposed_images:
0

Incorporated_images:
0

