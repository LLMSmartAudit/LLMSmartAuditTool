{
    "DemandAnalysis": {
      "assistant_role_name": "Analyst",
      "user_role_name": "Chief Executive Officer",
      "phase_prompt": [
        "ChatDev has made products in the following form before:",
        "Image: can present information in line chart, bar chart, flow chart, cloud chart, Gantt chart, etc.",
        "Document: can present information via .docx files.",
        "PowerPoint: can present information via .pptx files.",
        "Excel: can present information via .xlsx files.",
        "PDF: can present information via .pdf files.",
        "Website: can present personal resume, tutorial, products, or ideas, via .html files.",
        "Application: can implement visualized game, software, tool, etc, via python.",
        "Dashboard: can display a panel visualizing real-time information.",
        "Mind Map: can represent ideas, with related concepts arranged around a core concept.",
        "As the {assistant_role}, to satisfy the new user's demand and the product should be realizable, you should keep discussing with me to decide which product modality do we want the product to be?",
        "Note that we must ONLY discuss the product modality and do not discuss anything else! Once we all have expressed our opinion(s) and agree with the results of the discussion unanimously, any of us must actively terminate the discussion by replying with only one line, which starts with a single word <INFO>, followed by our final product modality without any other words, e.g., \"<INFO> PowerPoint\"."
      ]
    },
    "Coding": {
        "assistant_role_name": "Programmer",
        "user_role_name": "Analyst",
        "phase_prompt": [
          "According to the new user's task and our software designs listed below: ",
          "Task: \"{task}\".",
          "Modality: \"{modality}\".",
          "Programming Language: \"Python\"",
          "Ideas:\"{ideas}\"",
          "We have decided to complete the task through a executable software with multiple files implemented via Python. As the {assistant_role}, to satisfy the new user's demands, you should write one or multiple files and make sure that every detail of the architecture is, in the end, implemented as code. {gui}",
          "Think step by step and reason yourself to the right decisions to make sure we get it right.",
          "You will first lay out the names of the core classes, functions, methods that will be necessary, as well as a quick comment on their purpose.",
          "Then you will output the content of each file including complete code. Each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "You will start with the \"main\" file, then go to the ones that are imported by that file, and so on.",
          "Please note that the code should be fully functional. Ensure to implement all functions. No placeholders (such as 'pass' in Python)."
        ]
      },
      "TestErrorSummary": {
        "assistant_role_name": "Programmer",
        "user_role_name": "Tester",
        "phase_prompt": [
          "Our developed source codes and corresponding test reports are listed below: ",
          "Programming Language: \"Python\"",
          "Source Codes:",
          "\"{codes}\"",
          "Test Reports of Source Codes:",
          "\"{test_reports}\"",
          "According to my test reports, please locate and summarize the bugs that cause the problem."
        ]
      },
      "TestModification": {
        "assistant_role_name": "Programmer",
        "user_role_name": "Tester",
        "phase_prompt": [
          "Our developed source codes and corresponding test reports are listed below: ",
          "Programming Language: \"{language}\"",
          "Source Codes:",
          "\"{codes}\"",
          "Test Reports of Source Codes:",
          "\"{test_reports}\"",
          "Error Summary of Test Reports:",
          "\"{error_summary}\"",
          "Note that each file must strictly follow a markdown code block format, where the following tokens must be replaced such that \"FILENAME\" is the lowercase file name including the file extension, \"LANGUAGE\" in the programming language, \"DOCSTRING\" is a string literal specified in source code that is used to document a specific segment of code, and \"CODE\" is the original code:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "As the {assistant_role}, to satisfy the new user's demand and make the software execute smoothly and robustly, you should modify the codes based on the error summary. Now, use the format exemplified above and modify the problematic codes based on the error summary. Output the codes that you fixed based on the test reported and corresponding explanations (strictly follow the format defined above, including FILENAME, LANGUAGE, DOCSTRING and CODE; incomplete \"TODO\" codes are strictly prohibited). If no bugs are reported, please return only one line like \"<INFO> Finished\"."
        ]
      }
}